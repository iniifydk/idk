---
import { getCollection } from 'astro:content';
import WikiLayout from '../../layouts/WikiLayout.astro';
import VisitorCounter from '../../components/VisitorCounter.astro';

// Get all wiki entries
const allWikiEntries = await getCollection('wiki');

// Group entries by category
const categorizedEntries = allWikiEntries.reduce((acc, entry) => {
  const category = entry.data.category || 'Uncategorized';
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(entry);
  return acc;
}, {} as Record<string, typeof allWikiEntries>);

// Sort categories alphabetically, but put "Uncategorized" at the end
const sortedCategories = Object.keys(categorizedEntries).sort((a, b) => {
  if (a === 'Uncategorized') return 1;
  if (b === 'Uncategorized') return -1;
  return a.localeCompare(b);
});

// Sort entries within each category by order property if available, then by title
for (const category in categorizedEntries) {
  categorizedEntries[category].sort((a, b) => {
    // If both have order, sort by order
    if (a.data.order !== undefined && b.data.order !== undefined) {
      return a.data.order - b.data.order;
    }
    // If only a has order, a comes first
    if (a.data.order !== undefined) return -1;
    // If only b has order, b comes first
    if (b.data.order !== undefined) return 1;
    // Otherwise sort by title
    return a.data.title.localeCompare(b.data.title);
  });
}
---

<WikiLayout>
  <div class="wiki-content">
    <div class="header-section">
      <h1>Complete Hexed Wiki Index</h1>
      <p class="subtitle">Browse all available articles and resources</p>
      <VisitorCounter />
    </div>
    
    <div class="categories-list">
      {sortedCategories.map((category) => (
        <div class="category-section" id={category.toLowerCase().replace(/\s+/g, '-')}>
          <h2>{category}</h2>
          <ul class="page-list">
            {categorizedEntries[category].map((entry) => (
              <li>
                <a href={`/wiki/${entry.slug}`}>
                  <div class="entry-content">
                    <h3>{entry.data.title}</h3>
                    <p class="description">
                      {entry.body.split('\n').slice(0, 2).join(' ').substring(0, 150)}...
                    </p>
                  </div>
                  <div class="entry-arrow">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <path d="M5 12h14"></path>
                      <path d="M12 5l7 7-7 7"></path>
                    </svg>
                  </div>
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  </div>
</WikiLayout>

<style>
  .wiki-content {
    line-height: 1.6;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .header-section {
    text-align: center;
    margin-bottom: 3rem;
    padding: 2rem 1rem;
    border-radius: 12px;
    background: linear-gradient(135deg, rgba(26, 115, 232, 0.1) 0%, rgba(66, 133, 244, 0.05) 100%);
  }
  
  .subtitle {
    font-size: 1.2rem;
    color: #555;
    margin-top: 0.5rem;
    margin-bottom: 2rem;
  }

  .categories-list {
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }

  .category-section h2 {
    color: #1a73e8;
    border-bottom: 2px solid #eaecef;
    padding-bottom: 0.5rem;
    margin-bottom: 1.5rem;
    font-size: 1.8rem;
  }

  .page-list {
    list-style: none;
    padding: 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 1.5rem;
  }

  .page-list li {
    margin: 0;
    height: 100%;
  }

  .page-list a {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
    padding: 1.5rem;
    border-radius: 12px;
    background-color: #fff;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
    text-decoration: none;
    border: 1px solid #eaecef;
  }

  .page-list a:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
    border-color: #1a73e8;
  }
  
  .entry-content {
    flex: 1;
  }
  
  .entry-arrow {
    color: #1a73e8;
    opacity: 0.7;
    transition: opacity 0.2s, transform 0.2s;
  }
  
  .page-list a:hover .entry-arrow {
    opacity: 1;
    transform: translateX(4px);
  }

  .page-list h3 {
    font-size: 1.3rem;
    color: #1a73e8;
    margin: 0 0 0.8rem 0;
  }

  .description {
    margin: 0;
    color: #555;
    font-size: 0.95rem;
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  h1 {
    color: #2c3e50;
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    border: none;
  }
  
  /* Dark mode styles */
  :global(html.dark) .header-section {
    background: linear-gradient(135deg, rgba(26, 115, 232, 0.15) 0%, rgba(66, 133, 244, 0.08) 100%);
  }
  
  :global(html.dark) .subtitle {
    color: #aaa;
  }
  
  :global(html.dark) .page-list a {
    background-color: #252525;
    border-color: #3a3a3a;
  }
  
  :global(html.dark) .page-list a:hover {
    border-color: #7ab3ff;
  }
  
  :global(html.dark) .description {
    color: #aaa;
  }
  
  :global(html.dark) h1 {
    color: #e0e0e0;
  }
  
  :global(html.dark) .category-section h2 {
    color: #7ab3ff;
    border-bottom-color: #3a3a3a;
  }
  
  :global(html.dark) .page-list h3 {
    color: #7ab3ff;
  }
  
  :global(html.dark) .entry-arrow {
    color: #7ab3ff;
  }

  @media (max-width: 768px) {
    .page-list {
      grid-template-columns: 1fr;
    }
    
    .header-section {
      padding: 1.5rem 1rem;
    }
    
    h1 {
      font-size: 2rem;
    }
    
    .subtitle {
      font-size: 1.1rem;
    }
  }
</style>